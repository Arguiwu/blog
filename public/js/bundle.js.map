{"version":3,"sources":["node_modules/.6.0.2@browser-pack/_prelude.js","app/Tool.js","app/actions/ArchiveActions.js","app/actions/ContentActions.js","app/actions/IndexActions.js","app/actions/NavbarActions.js","app/alt.js","app/components/App.js","app/components/Archive.js","app/components/Content.js","app/components/Footer.js","app/components/Index.js","app/components/Navbar.js","app/main.js","app/routes.js","app/stores/ArchiveStore.js","app/stores/ContentStore.js","app/stores/IndexStore.js","app/stores/NavbarStore.js","node_modules/.0.11.9@process/browser.js","node_modules/.1.0.1@deep-equal/index.js","node_modules/.1.0.1@deep-equal/lib/is_arguments.js","node_modules/.1.0.1@deep-equal/lib/keys.js","node_modules/.1.17.0@history/lib/Actions.js","node_modules/.1.17.0@history/lib/AsyncUtils.js","node_modules/.1.17.0@history/lib/DOMStateStorage.js","node_modules/.1.17.0@history/lib/DOMUtils.js","node_modules/.1.17.0@history/lib/ExecutionEnvironment.js","node_modules/.1.17.0@history/lib/node_modules/history/lib/createBrowserHistory.js","node_modules/.1.17.0@history/lib/createDOMHistory.js","node_modules/.1.17.0@history/lib/createHistory.js","node_modules/.1.17.0@history/lib/createLocation.js","node_modules/.1.17.0@history/lib/deprecate.js","node_modules/.1.17.0@history/lib/extractPath.js","node_modules/.1.17.0@history/lib/parsePath.js","node_modules/.1.17.0@history/lib/runTransitionHook.js","node_modules/.2.1.0@warning/node_modules/.1.17.0@history/node_modules/warning/browser.js","node_modules/.2.2.2@invariant/node_modules/.1.17.0@history/node_modules/invariant/browser.js"],"names":[],"mappings":"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rB;AACA;;;;;;AACD;kBACc,cAAI,WAAJ,CAAgB,YAAhB,C;;;;;;;;;;;ACXf;;;;AACA;;;;;;;;IACM,Y;AACL,yBAAc;AAAA;;AACb,OAAK,WAAL;AACA,OAAK,WAAL,GAAmB,EAAnB;AACA;;;;iCACc,I,EAAM;AACpB,QAAK,WAAL,GAAmB,KAAK,IAAxB;AACA;;;;;;AACD;kBACc,cAAI,WAAJ,CAAgB,YAAhB,C;;;;;;;;;;;ACXf;;;;AACA;;;;;;;;IACM,U;AACL,uBAAc;AAAA;;AACb,OAAK,WAAL;AACA,OAAK,QAAL,GAAgB,EAAhB;AACA;;;;8BACW,I,EAAM;AACjB,QAAK,QAAL,GAAgB,KAAK,IAArB;AACA;;;;;;AACD;kBACc,cAAI,WAAJ,CAAgB,UAAhB,C;;;;;;;;;;;ACXf;;;;AACA;;;;;;;;IAEM,W;AACL,wBAAc;AAAA;;AACb,OAAK,WAAL;AACA,OAAK,QAAL,GAAgB,GAAhB;AACA;;;;8BACW,Q,EAAU;AACrB,QAAK,QAAL,GAAgB,QAAhB;AACA;;;;;;AACD;kBACc,cAAI,WAAJ,CAAgB,WAAhB,C;;;ACZfppBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const Tool = {};\r\nTool.formatDate = function(str) {\r\n\tvar date = new Date(str);\r\n\tvar dateString = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\r\n\treturn dateString;\r\n};\r\nexport default Tool;","import alt from '../alt';\r\nclass ArchiveActions {\r\n\tconstructor() {\r\n\t\tthis.generateActions(\r\n\t\t\t\"setDataList\"\r\n\t\t);\r\n\t}\r\n\tgetDataList() {\r\n\t\tfetch('https://cnodejs.org/api/v1/topics').then(response => response.json())\r\n\t\t\t.then(data => this.actions.setDataList(data))\r\n\t\t\t.catch(e => console.log('报错啦', e))\r\n\t}\r\n}\r\nexport default alt.createActions(ArchiveActions);","import alt from '../alt';\r\nclass ContentActions {\r\n\tconstructor() {\r\n\t\tthis.generateActions(\r\n\t\t\t\"setContentData\"\r\n\t\t);\r\n\t}\r\n\tgetDataList(id) {\r\n\t\tfetch('https://cnodejs.org/api/v1/topic/' + id).then(response => response.json())\r\n\t\t\t.then(data => this.actions.setContentData(data))\r\n\t\t\t.catch(e => console.log('报错啦', e))\r\n\t}\r\n}\r\nexport default alt.createActions(ContentActions);","import alt from '../alt';\r\nclass IndexActions {\r\n\tconstructor() {\r\n\t\tthis.generateActions(\r\n\t\t\t'setDataList'\r\n\t\t);\r\n\t}\r\n\tgetDataList() {\r\n\t\tfetch('https://cnodejs.org/api/v1/topics?tab=good').then(response => response.json())\r\n\t\t\t.then(data => this.actions.setDataList(data))\r\n\t\t\t.catch(e => console.log('报错啦', e))\r\n\t}\r\n};\r\nexport default alt.createActions(IndexActions);","import alt from '../alt';\r\n\r\nclass NavbarActions {\r\n\tconstructor() {\r\n\t\tthis.generateActions(\r\n\t\t\t'setPathname'\r\n\t\t);\r\n\t}\r\n\tgetPathname() {\r\n\t\tthis.actions.setPathname(window.location.pathname);\r\n\t}\r\n};\r\nexport default alt.createActions(NavbarActions);","import Alt from 'alt';\r\nexport default new Alt();","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"flex-body\">\r\n\t\t\t\t<Navbar history={ this.props.history } />\r\n\t\t\t\t{ this.props.children }\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nexport default App;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport Tool from '../Tool';\r\nimport ArchiveStore from '../stores/ArchiveStore';\r\nimport ArchiveActions from '../actions/ArchiveActions';\r\nclass Archive extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = ArchiveStore.getState();\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tArchiveStore.listen(this.onChange);\r\n\t\tArchiveActions.getDataList();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tArchiveStore.unlisten(this.onChange);\r\n\t}\r\n\tonChange(state) {\r\n\t\tthis.setState(state);\r\n\t}\r\n\trender() {\r\n\t\tvar Archives = this.state.dataList.map((item, index) => \r\n\t\t\t<div className=\"cd-timeline-block\" key={item.id}>\r\n\t\t\t\t<div className=\"cd-timeline-img cd-picture\">\r\n\t\t\t\t\t<img src=\"/images/icon-picture.svg\" alt=\"Picture\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"cd-timeline-content\">\r\n\t\t\t\t\t<Link to={ \"/article/\" + item.id }>\r\n\t\t\t\t\t\t<h4>{item.title}</h4>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span className=\"cd-date\">{Tool.formatDate(item.create_at)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"sheet\">\r\n\t\t\t\t\t\t\t<header><h1>档案</h1></header>\r\n\t\t\t\t\t\t\t<hr className=\"boundary\" />\r\n\t\t\t\t\t\t\t<article>\r\n\t\t\t\t\t\t\t\t<section id=\"cd-timeline\" className=\"cd-container\">\r\n\t\t\t\t\t\t\t\t\t{Archives}\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</article>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nexport default Archive;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport Tool from '../Tool';\r\nimport ContentStore from '../stores/ContentStore';\r\nimport ContentActions from '../actions/ContentActions';\r\nclass Content extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = ContentStore.getState();\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tContentStore.listen(this.onChange);\r\n\t\tContentActions.getDataList(this.props.params.id);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tContentStore.unlisten(this.onChange);\r\n\t}\r\n\tonChange(state) {\r\n\t\tthis.setState(state);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"content col-lg-9\">\r\n\t\t\t\t\t\t\t<div className=\"sheet post\">\r\n\t\t\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t\t\t<h2>{this.state.contentData.title}</h2>\r\n\t\t\t\t\t\t\t\t\t<p className=\"post-meta\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"octicon octicon-clock\"></span>&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<span>{Tool.formatDate(this.state.contentData.create_at)}</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"post-tag\">\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\"><span className=\"octicon octicon-tag\">标签</span></Link>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t\t<hr className=\"boundary\" />\r\n\t\t\t\t\t\t\t\t<article dangerouslySetInnerHTML={{__html: this.state.contentData.content}} />\r\n\t\t\t\t\t\t\t\t<div id=\"post-share\" className=\"bdsharebuttonbox\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"bds_more\" data-cmd=\"more\"></Link>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"bds_tsina\" data-cmd=\"tsina\" title=\"分享到新浪微博\"></Link>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"bds_weixin\" data-cmd=\"weixin\" title=\"分享到微信\"></Link>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"bds_douban\" data-cmd=\"douban\" title=\"分享到豆瓣网\"></Link>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"bds_fbook\" data-cmd=\"fbook\" title=\"分享到Facebook\"></Link>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"bds_copy\" data-cmd=\"copy\" title=\"分享到复制网址\"></Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"content-navigation col-lg-3\">\r\n\t\t\t\t\t\t\t<div className=\"shadow-bottom-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"content-navigation-toc\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-header\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"octicon octicon-list-unordered\"></span>&nbsp;Toc\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-list toc\">\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section1\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section2\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section3\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"content-navigation-tag\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-toc\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"octicon octicon-list-unordered\"></span>&nbsp;Toc\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-list toc\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section1\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section2\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section3\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"content-navigation-related\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-toc\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"octicon octicon-list-unordered\"></span>&nbsp;Related\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content-navigation-list toc\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section1\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section2\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/\" id=\"markdown-toc-section3\">词法作用域</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nexport default Content;","import React from 'react';\r\nimport { Link } from 'react-router';\r\n\r\nclass Footer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"flex-footer\">\r\n\t\t\t\t<div className=\"page-scrollTop\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Top\">\r\n\t\t\t\t\t<Link to=\"javascript:;\">\r\n\t\t\t\t\t\t<div className=\"arrow\"></div>\r\n\t\t\t\t\t\t<div className=\"stick\"></div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer className=\"footnote footnote-vinson\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Link className=\"foot-item\" to=\"/\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<span className=\"octicon octicon-mail\"></span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link className=\"foot-item\" to=\"/\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<span className=\"octicon octicon-mark-github\"></span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link className=\"foot-item\" to=\"/\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<span className=\"octicon octicon-rss\"></span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link className=\"foot-item\" to=\"/\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<span className=\"octicon octicon-link-external\"></span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"word-keep\"> &copy;月桂叶</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport Tool from '../Tool';\r\nimport IndexStore from '../stores/IndexStore';\r\nimport IndexActions from '../actions/IndexActions';\r\nclass Index extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = IndexStore.getState();\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tIndexStore.listen(this.onChange);\r\n\t\tIndexActions.getDataList();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tIndexStore.unlisten(this.onChange);\r\n\t}\r\n\tonChange(state) {\r\n\t\tthis.setState(state);\r\n\t}\r\n\trender() {\r\n\t\tvar articles = this.state.dataList.map((item, index) => \r\n\t\t\t<article key={item.id}>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<Link to={ \"/article/\" + item.id }>\r\n\t\t\t\t\t\t<span className=\"octicon octicon-calendar\"></span>\r\n\t\t\t\t\t\t<span>{Tool.formatDate(item.create_at)}</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div className=\"module\">\r\n\t\t\t\t\t<Link to={ \"/article/\" + item.id } className=\"title\">{item.title}</Link>\r\n\t\t\t\t\t<p dangerouslySetInnerHTML={{__html: item.content}} />\r\n\t\t\t\t\t<Link to={ \"/article/\" + item.id } className=\"readmore\">详情</Link>\r\n\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t<Link to=\"#\" className=\"word-keep\"><span className=\"octicon octicon-tag\"></span> 标签一</Link>\r\n\t\t\t\t\t\t<Link to=\"#\" className=\"word-keep\"><span className=\"octicon octicon-tag\"></span> 标签二</Link>\r\n\t\t\t\t\t\t<Link to=\"#\" className=\"word-keep\"><span className=\"octicon octicon-tag\"></span> 标签三</Link>\r\n\t\t\t\t\t\t<span className=\"word-keep pull-right\">\r\n\t\t\t\t\t\t\t<Link to=\"#\"><span className=\"octicon octicon-comment\"></span> 评论\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link to=\"#\"><span className=\"octicon octicon-file-symlink-file\"></span> 分享\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</footer>\r\n\t\t\t\t</div>\r\n\t\t\t</article>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row index\">\r\n\t\t\t\t\t\t<div className=\"col-sm-10 col-sm-offset-1 col-lg-9 col-lg-offset-1_5\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<section className=\"category-slice\">\r\n\t\t\t\t\t\t\t\t\t{articles}\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nexport default Index;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport NavbarStore from '../stores/NavbarStore';\r\nimport NavbarActions from '../actions/NavbarActions';\r\n\r\nclass Navbar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = NavbarStore.getState();\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tNavbarStore.listen(this.onChange);\r\n\t\tNavbarActions.getPathname();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tNavbarStore.unlisten(this.onChange);\r\n\t}\r\n\tonChange(state) {\r\n\t\tthis.setState(state);\r\n\t}\r\n\thandleLink(event) {\r\n\t\tNavbarActions.getPathname();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t<nav className=\"navbar navbar-vinson rectangle\" role=\"navigation\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"navbar-header\">\r\n\t\t\t\t\t\t\t<button className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" type=\"button\">\r\n\t\t\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t\t\t<span className=\"icon-bar\"></span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<Link to=\"/\" className=\"navbar-brand\"> 月桂叶的博客</Link>\r\n\t\t\t\t\t\t\t<small className=\"navbar-text\"> 爱编程爱生活</small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\">\r\n\t\t\t\t\t\t\t<ul className=\"nav navbar-nav navbar-right\" onClick={this.handleLink.bind(this)}>\r\n\t\t\t\t\t\t\t\t<li className={this.state.pathname == '/' ? 'active' : ''}>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"word-keep\" to=\"/\"><span className=\"octicon octicon-book\">\r\n\t\t\t\t\t\t\t\t\t\t</span> 博文\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className={this.state.pathname == '/archive' ? 'active' : ''}>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"word-keep\" to=\"/archive\"><span className=\"octicon octicon-repo\">\r\n\t\t\t\t\t\t\t\t\t\t</span> 档案\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className={this.state.pathname == '/category' ? 'active' : ''}>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"word-keep\" to=\"/category\"><span className=\"octicon octicon-list-unordered\">\r\n\t\t\t\t\t\t\t\t\t\t</span> 分类\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className={this.state.pathname == '/tag' ? 'active' : ''}>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"word-keep\" to=\"/tag\"><span className=\"octicon octicon-tag\">\r\n\t\t\t\t\t\t\t\t\t\t</span> 标签\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"#stq=\" className=\"search-button\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"octicon octicon-search\"></span>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n};\r\nexport default Navbar;","import React from 'react';\r\nimport Router from 'react-router';\r\nimport ReactDOM from 'react-dom';\r\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\r\nimport routes from './routes';\r\n\r\nlet history = createBrowserHistory();\r\n\r\nReactDOM.render(<Router history={history}>{routes}</Router>,document.getElementById('app'))","import React from 'react';\r\nimport {Route} from 'react-router';\r\nimport App from './components/App';\r\nimport Index from './components/Index';\r\nimport Archive from './components/Archive';\r\nimport Content from './components/Content';\r\n\r\nexport default (\r\n\t<Route component={App}>\r\n\t\t<Route path='/' component={Index} />\r\n\t\t<Route path='/archive' component={Archive} />\r\n\t\t<Route path='/article/:id' component={Content} />\r\n\t</Route>\r\n);","import alt from '../alt';\r\nimport ArchiveActions from '../actions/ArchiveActions';\r\nclass ArchiveStore {\r\n\tconstructor() {\r\n\t\tthis.bindActions(ArchiveActions);\r\n\t\tthis.dataList = [];\r\n\t}\r\n\tsetDataList(data) {\r\n\t\tthis.dataList = data.data;\r\n\t}\r\n};\r\nexport default alt.createStore(ArchiveStore);","import alt from '../alt';\r\nimport ContentActions from '../actions/ContentActions';\r\nclass ContentStore {\r\n\tconstructor() {\r\n\t\tthis.bindActions(ContentActions);\r\n\t\tthis.contentData = {};\r\n\t}\r\n\tsetContentData(data) {\r\n\t\tthis.contentData = data.data;\r\n\t}\r\n};\r\nexport default alt.createStore(ContentStore);","import alt from '../alt';\r\nimport IndexActions from '../actions/IndexActions';\r\nclass IndexStore {\r\n\tconstructor() {\r\n\t\tthis.bindActions(IndexActions);\r\n\t\tthis.dataList = [];\r\n\t}\r\n\tsetDataList(data) {\r\n\t\tthis.dataList = data.data;\r\n\t}\r\n};\r\nexport default alt.createStore(IndexStore);","import alt from '../alt';\r\nimport NavbarActions from '../actions/NavbarActions';\r\n\r\nclass NavbarStore {\r\n\tconstructor() {\r\n\t\tthis.bindActions(NavbarActions);\r\n\t\tthis.pathname = '/';\r\n\t}\r\n\tsetPathname(pathname) {\r\n\t\tthis.pathname = pathname;\r\n\t}\r\n};\r\nexport default alt.createStore(NavbarStore);","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}